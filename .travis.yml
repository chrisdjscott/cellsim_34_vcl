# run in container
sudo: false
language: cpp
compiler: gcc

# cache ViennaCL as can be slow to download
cache:
    directories:
        - tmp/ViennaCL-1.7.1/viennacl

# install apt dependencies
addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - boost-latest
            - george-edison55-precise-backports
            
        packages:
            - libboost1.55-dev
            - gcc-4.9
            - g++-4.9
            - cmake
            - cmake-data

# run the 3 and 4 variable versions in parallel
env:
    - MODEL=03 PYTHON=2.7
    - MODEL=03 PYTHON=3.5
    - MODEL=04 PYTHON=2.7
    - MODEL=04 PYTHON=3.5

# install dependencies
install:
    - export CC=gcc-4.9
    - export CXX=g++-4.9
    - ${CXX} --version
    - cmake --version
    - curdir=$(pwd)
    - mkdir -p tmp
    - cd tmp
    - wget http://bitbucket.org/eigen/eigen/get/3.2.8.tar.gz
    - tar -xzf 3.2.8.tar.gz
    - export EIGEN_PATH=${curdir}/tmp/eigen-eigen-07105f7124f9
    - export VCL_PATH=${curdir}/tmp/ViennaCL-1.7.1
    - if [ ! -f "${VCL_PATH}/viennacl/vector.hpp" ]; then export GET_VCL=1; fi
    - if [ "${GET_VCL}" == "1" ]; then echo "Installing ViennaCL..."; fi
    - if [ "${GET_VCL}" == "1" ]; then wget https://sourceforge.net/projects/viennacl/files/1.7.x/ViennaCL-1.7.1.tar.gz; fi
    - if [ "${GET_VCL}" == "1" ]; then tar -xzf ViennaCL-1.7.1.tar.gz; fi
    - cd ${curdir}
    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O tmp/miniconda.sh
    - chmod +x tmp/miniconda.sh
    - tmp/miniconda.sh -b -p tmp/miniconda
    - export PATH=${curdir}/tmp/miniconda/bin:${PATH}
    - conda update --yes conda
    - conda create -n testenv --yes numpy scipy python=${PYTHON}
    - source activate testenv
    - python --version

# compile cellsim
script:
    - mkdir build
    - cd build
    - if [ "$MODEL" == "03" ]; then MODELDEF="-DFOUR_VARIABLES=OFF"; fi
    - if [ "$MODEL" == "04" ]; then MODELDEF="-DTHREE_VARIABLES=OFF"; fi
    - cmake .. -DVIENNACL_INCLUDE_DIR=${VCL_PATH} -DEIGEN3_INCLUDE_DIR=${EIGEN_PATH} ${MODELDEF}
    - make
    - cd ../test
    - cp cell01m_HARMONIC_100p.msh cs.msh
    - cp generic3d_${MODEL}-cs.dat cs.dat
    - ../build/generic3d_${MODEL}_linux_vcl-serial-gnu
    - python cs_reduce_min-max.py
    - python cs_compare_peaks.py cR.bin generic3d_${MODEL}-cR.bin
