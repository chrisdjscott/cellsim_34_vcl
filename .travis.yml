# run in container
dist: precise
sudo: false
language: cpp
compiler: gcc

# cache ViennaCL as can be slow to download
cache:
    directories:
        - tmp/ViennaCL-1.7.1/viennacl

# install apt dependencies
addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - boost-latest
            - george-edison55-precise-backports
            
        packages:
            - libboost1.55-dev
            - gcc-6
            - g++-6
            - cmake
            - cmake-data

# different test cases
env:
    - MODEL=03 PYTHON=3.6 PYREDUCE=0 OMP=0 MKL=0
    - MODEL=04 PYTHON=3.6 PYREDUCE=0 OMP=0 MKL=0  # check both 3 and 4 variable work (no python reduce)
    - MODEL=03 PYTHON=2.7 PYREDUCE=1 OMP=0 MKL=0
    - MODEL=03 PYTHON=3.6 PYREDUCE=1 OMP=0 MKL=0  # check python reduce works with both python 2 and 3 (3 variable)
    - MODEL=04 PYTHON=2.7 PYREDUCE=1 OMP=0 MKL=0  # check python reduce works with 4 variable
    - MODEL=03 PYTHON=3.6 PYREDUCE=0 OMP=1 MKL=0  # check OpenMP version works
#    - MODEL=03 PYTHON=3.6 PYREDUCE=0 OMP=0 MKL=1  # check MKL version works

# install dependencies
install:
    - export CC=gcc-6
    - export CXX=g++-6
    - ${CXX} --version
    - cmake --version
    - curdir=$(pwd)
    - mkdir -p tmp
    - cd tmp
    - wget http://bitbucket.org/eigen/eigen/get/3.2.8.tar.gz
    - tar -xzf 3.2.8.tar.gz
    - export EIGEN_PATH=${curdir}/tmp/eigen-eigen-07105f7124f9
    - export VCL_PATH=${curdir}/tmp/ViennaCL-1.7.1
    - if [ ! -f "${VCL_PATH}/viennacl/vector.hpp" ]; then export GET_VCL=1; fi
    - if [ "${GET_VCL}" == "1" ]; then echo "Installing ViennaCL..."; fi
    - if [ "${GET_VCL}" == "1" ]; then wget https://sourceforge.net/projects/viennacl/files/1.7.x/ViennaCL-1.7.1.tar.gz; fi
    - if [ "${GET_VCL}" == "1" ]; then tar -xzf ViennaCL-1.7.1.tar.gz; fi
    - cd ${curdir}
    - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O tmp/miniconda.sh
    - chmod +x tmp/miniconda.sh
    - tmp/miniconda.sh -b -p tmp/miniconda
    - export PATH=${curdir}/tmp/miniconda/bin:${PATH}
    - conda update --yes conda
    - conda create -n testenv --yes mkl numpy scipy python=${PYTHON}
    - source activate testenv
    - python --version
    - export MKL_ROOT=$(dirname $(dirname $(which python)))
    - echo "MKL_ROOT = ${MKL_ROOT}"

# compile cellsim
script:
    - mkdir build
    - cd build
    - if [ "$MODEL" == "03" ]; then MODELDEF="-DFOUR_VARIABLES=OFF"; fi
    - if [ "$MODEL" == "04" ]; then MODELDEF="-DTHREE_VARIABLES=OFF"; fi
    - if [ "$PYREDUCE" == "1" ]; then REDUCEDEF="-DTEST_CXX_REDUCE=OFF"; fi
    - if [ "$PYREDUCE" == "0" ]; then REDUCEDEF="-DTEST_PYTHON_REDUCE=OFF"; fi
    - if [ "$OMP" == "1" ]; then BUILD_DEF="-DBUILD_SERIAL=OFF -DBUILD_OPENMP=ON"; fi
    - if [ "$OMP" == "0" ]; then BUILD_DEF=""; fi
    - if [ "$MKL" == "1" ]; then BUILD_DEF="-DBUILD_SERIAL=OFF -DBUILD_MKL=ON"; fi
    - if [ "$MKL" == "0" ]; then BUILD_DEF=""; fi
    - echo "cmake .. -DVIENNACL_INCLUDE_DIR=${VCL_PATH} -DEIGEN3_INCLUDE_DIR=${EIGEN_PATH} ${BUILD_DEF} ${MODELDEF} ${REDUCEDEF}"
    - cmake .. -DVIENNACL_INCLUDE_DIR=${VCL_PATH} -DEIGEN3_INCLUDE_DIR=${EIGEN_PATH} ${BUILD_DEF} ${MODELDEF} ${REDUCEDEF}
    - make
    - export OMP_NUM_THREADS=4  # https://docs.travis-ci.com/user/languages/cpp/#OpenMP-projects
    - ctest --output-on-failure
